<v:ValidatableControl x:Class="Grizzlist.Client.Tasks.Drawings.DrawingEditorControl"
             xmlns:v="clr-namespace:Grizzlist.Client.Validators"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Grizzlist.Client.Tasks.Drawings"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="40" />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="5" />
            <RowDefinition Height="30" />
            <RowDefinition Height="60" />
            <RowDefinition Height="30" x:Name="rowTools" />
            <RowDefinition />
        </Grid.RowDefinitions>
        <TextBlock Grid.Row="1" Margin="0 6 0 0" HorizontalAlignment="Right" Text="Name" />
        <TextBlock Grid.Row="2" Margin="0 6 0 0" HorizontalAlignment="Right" Text="Note" />
        <TextBox Grid.Row="1" Grid.Column="1" Margin="10 5" x:Name="tbName" TextChanged="tbName_TextChanged" />
        <TextBox Grid.Row="2" Grid.Column="1" Margin="10 5" TextWrapping="Wrap" AcceptsReturn="True" VerticalScrollBarVisibility="Auto" x:Name="tbNote" TextChanged="tbNote_TextChanged" />
        <StackPanel Grid.Row="3" Grid.ColumnSpan="2" Margin="5 0" Orientation="Horizontal">
            <Button Margin="2 5" Width="20" Background="Black" ToolTip="Select color" Style="{DynamicResource ColorButton}" Click="SelectColor_Click">
                <Button.Resources>
                    <Style x:Key="FocusVisual">
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                    <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
                    <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
                    <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
                    <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
                    <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
                    <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
                    <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
                    <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
                    <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
                    <Style x:Key="ColorButton" TargetType="{x:Type Button}">
                        <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
                        <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
                        <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
                        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
                        <Setter Property="BorderThickness" Value="1"/>
                        <Setter Property="HorizontalContentAlignment" Value="Center"/>
                        <Setter Property="VerticalContentAlignment" Value="Center"/>
                        <Setter Property="Padding" Value="1"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Button}">
                                    <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                                        <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsDefaulted" Value="true">
                                            <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="true">
                                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                                        </Trigger>
                                        <Trigger Property="IsPressed" Value="true">
                                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                            <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Button.Resources>
            </Button>
            <TextBox Width="20" Margin="2 5" ToolTip="Tool thickness" x:Name="tbThickness" Text="2" />
            <Border Margin="9 4 1 4" BorderThickness="1" BorderBrush="White" x:Name="brBrush">
                <Button Style="{DynamicResource ImageButton}" ToolTip="Brush" Click="Brush_Click">
                    <Image Source="/Resources/brush.png" />
                </Button>
            </Border>
            <Border Margin="0 4" BorderThickness="1" BorderBrush="White" x:Name="brEraser">
                <Button Style="{DynamicResource ImageButton}" ToolTip="Eraser" Click="Eraser_Click">
                    <Image Source="/Resources/rubber.png" />
                </Button>
            </Border>
            <Button Margin="2 5" Style="{DynamicResource ImageButton}" ToolTip="Clear all" Click="Clear_Click">
                <Image Source="/Resources/clear.png" />
            </Button>
            <TextBox Width="30" Margin="10 5 2 5" ToolTip="Width (min 100)" x:Name="tbWidth" />
            <TextBlock Margin="0 6" Text="X" />
            <TextBox Width="30" Margin="2 5" ToolTip="Height (min 100)" x:Name="tbHeight" />
            <Button Margin="2 5" Style="{DynamicResource ImageButton}" ToolTip="Change size" Click="ChangeSize_Click">
                <Image Source="/Resources/size.png" />
            </Button>
            <Button Margin="10 5 2 5" Style="{DynamicResource ImageButton}" ToolTip="Remove drawing" Click="RemoveDrawing_Click">
                <Image Source="/Resources/remove_24_red.png" />
            </Button>
        </StackPanel>
        <ScrollViewer Grid.Row="4" Grid.ColumnSpan="2" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
            <Border Margin="5" BorderThickness="1" BorderBrush="#ABADB3" x:Name="brCanvas">
                <Canvas Background="White" x:Name="mainCanvas" MouseDown="mainCanvas_MouseDown" MouseUp="mainCanvas_MouseUp" MouseMove="mainCanvas_MouseMove" />
            </Border>
        </ScrollViewer>
    </Grid>
</v:ValidatableControl>
